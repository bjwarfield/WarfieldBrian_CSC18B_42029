package ShootEmUp_V2.Users;

import ShootEmUp_V2.Main.ResourceFactory;
import ShootEmUp_V2.Util.DBConnect;
import java.awt.CardLayout;
import java.awt.Color;
import static ShootEmUp_V2.Util.Validator.*;
import java.awt.Component;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JPasswordField;
import javax.swing.JTextField;

public class UserControlPanel extends javax.swing.JFrame {

    private CardLayout cl;
    //color vars
    Color valid = new Color(200, 255, 200);
    Color invalid = new Color(255, 200, 200);

    public UserControlPanel() {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UserControlPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UserControlPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UserControlPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UserControlPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        initComponents();
        setLocationRelativeTo(null);

        this.addWindowListener(new WindowAdapter() {

            @Override
            public void windowClosing(WindowEvent e) {
                close();
            }

        });

        cl = (CardLayout) MainPanel.getLayout();
        if (User.isLoggedIn()) {
            NavRegLog.setText("Log Out");
        } else {
            NavRegLog.setText("Register");
        }
    }

    //go back to game window
    private void close() {
        setVisible(false);
        ResourceFactory.get().getGameWindow().setVisable(true);
        ResourceFactory.get().getGameWindow().requestFocus();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        MainPanel = new javax.swing.JPanel();
        LoginPanel = new javax.swing.JPanel();
        LoginEmailField = new javax.swing.JTextField();
        LoginEmailLabel = new javax.swing.JLabel();
        LoginPassLabel = new javax.swing.JLabel();
        LoginCancel = new javax.swing.JButton();
        LoginConfirm = new javax.swing.JButton();
        LoginPassField = new javax.swing.JPasswordField();
        LoginTitlelabel = new javax.swing.JLabel();
        LoginEmailValid = new javax.swing.JLabel();
        LoginPassValid = new javax.swing.JLabel();
        HomePanel = new javax.swing.JPanel();
        HomeWelcomeLabel = new javax.swing.JLabel();
        RegPanel = new javax.swing.JPanel();
        RegTitleLabel = new javax.swing.JLabel();
        RegFnameLabel = new javax.swing.JLabel();
        RegFNameField = new javax.swing.JTextField();
        RegLNameLabel = new javax.swing.JLabel();
        RegLNameField = new javax.swing.JTextField();
        RegHandleLabel = new javax.swing.JLabel();
        RegHandleField = new javax.swing.JTextField();
        RegEmailLabel = new javax.swing.JLabel();
        RegEmailField = new javax.swing.JTextField();
        RegPassLabel = new javax.swing.JLabel();
        RegPassField = new javax.swing.JPasswordField();
        RegPassLabel2 = new javax.swing.JLabel();
        RegPassField2 = new javax.swing.JPasswordField();
        RegCancel = new javax.swing.JButton();
        RegConfirm = new javax.swing.JButton();
        RegFNameValid = new javax.swing.JLabel();
        RegLNameValid = new javax.swing.JLabel();
        RegHandleValid = new javax.swing.JLabel();
        RegEmailValid = new javax.swing.JLabel();
        RegPassValid = new javax.swing.JLabel();
        RegPassMatch = new javax.swing.JLabel();
        NavPanel = new javax.swing.JPanel();
        NavHome = new javax.swing.JButton();
        NavRegLog = new javax.swing.JButton();
        NavHiScores = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(800, 600));
        setMinimumSize(new java.awt.Dimension(800, 600));
        setName("UserControlPanel"); // NOI18N
        setResizable(false);

        MainPanel.setMaximumSize(new java.awt.Dimension(800, 575));
        MainPanel.setMinimumSize(new java.awt.Dimension(800, 575));
        MainPanel.setPreferredSize(new java.awt.Dimension(800, 575));
        MainPanel.setLayout(new java.awt.CardLayout());

        LoginPanel.setMaximumSize(new java.awt.Dimension(800, 575));
        LoginPanel.setMinimumSize(new java.awt.Dimension(800, 575));
        LoginPanel.setPreferredSize(new java.awt.Dimension(800, 575));

        LoginEmailLabel.setText("Email");

        LoginPassLabel.setText("Password");

        LoginCancel.setText("Cancel");
        LoginCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LoginCancelActionPerformed(evt);
            }
        });

        LoginConfirm.setText("Login");
        LoginConfirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LoginConfirmActionPerformed(evt);
            }
        });

        LoginTitlelabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        LoginTitlelabel.setText("Shoot Em Up!");

        LoginEmailValid.setForeground(new java.awt.Color(153, 0, 0));

        LoginPassValid.setForeground(new java.awt.Color(153, 0, 0));

        javax.swing.GroupLayout LoginPanelLayout = new javax.swing.GroupLayout(LoginPanel);
        LoginPanel.setLayout(LoginPanelLayout);
        LoginPanelLayout.setHorizontalGroup(
            LoginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, LoginPanelLayout.createSequentialGroup()
                .addGap(219, 219, 219)
                .addGroup(LoginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(LoginTitlelabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(LoginPanelLayout.createSequentialGroup()
                        .addComponent(LoginCancel, javax.swing.GroupLayout.DEFAULT_SIZE, 149, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(LoginConfirm, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(LoginPanelLayout.createSequentialGroup()
                        .addGroup(LoginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(LoginEmailLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(LoginPassLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(LoginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(LoginEmailField)
                            .addComponent(LoginPassField))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(LoginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(LoginEmailValid, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(LoginPassValid, javax.swing.GroupLayout.DEFAULT_SIZE, 188, Short.MAX_VALUE))
                .addContainerGap())
        );
        LoginPanelLayout.setVerticalGroup(
            LoginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LoginPanelLayout.createSequentialGroup()
                .addGap(101, 101, 101)
                .addComponent(LoginTitlelabel, javax.swing.GroupLayout.DEFAULT_SIZE, 89, Short.MAX_VALUE)
                .addGap(161, 161, 161)
                .addGroup(LoginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LoginEmailField, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LoginEmailLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(LoginEmailValid, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(LoginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(LoginPassValid, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
                    .addComponent(LoginPassLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(LoginPassField, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE))
                .addGap(31, 31, 31)
                .addGroup(LoginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LoginConfirm, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LoginCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(47, 47, 47))
        );

        MainPanel.add(LoginPanel, "LoginPanel");

        HomePanel.setMaximumSize(new java.awt.Dimension(800, 575));
        HomePanel.setMinimumSize(new java.awt.Dimension(800, 575));

        HomeWelcomeLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        HomeWelcomeLabel.setText("Welcome User");

        javax.swing.GroupLayout HomePanelLayout = new javax.swing.GroupLayout(HomePanel);
        HomePanel.setLayout(HomePanelLayout);
        HomePanelLayout.setHorizontalGroup(
            HomePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HomePanelLayout.createSequentialGroup()
                .addGap(226, 226, 226)
                .addComponent(HomeWelcomeLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 369, Short.MAX_VALUE)
                .addGap(205, 205, 205))
        );
        HomePanelLayout.setVerticalGroup(
            HomePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HomePanelLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(HomeWelcomeLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE)
                .addGap(514, 514, 514))
        );

        MainPanel.add(HomePanel, "HomePanel");

        RegPanel.setMaximumSize(new java.awt.Dimension(800, 575));
        RegPanel.setMinimumSize(new java.awt.Dimension(800, 575));

        RegTitleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        RegTitleLabel.setText("Register");

        RegFnameLabel.setText("First Name");

        RegFNameField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                RegFNameFieldFocusLost(evt);
            }
        });

        RegLNameLabel.setText("Last Name");

        RegLNameField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                RegLNameFieldFocusLost(evt);
            }
        });
        RegLNameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RegLNameFieldActionPerformed(evt);
            }
        });

        RegHandleLabel.setText("Handle");

        RegHandleField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                RegHandleFieldFocusLost(evt);
            }
        });

        RegEmailLabel.setText("Email");

        RegEmailField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                RegEmailFieldFocusLost(evt);
            }
        });

        RegPassLabel.setText("Password");

        RegPassField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                RegPassFieldFocusLost(evt);
            }
        });

        RegPassLabel2.setText("Confirm Pass");

        RegPassField2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                RegPassField2FocusLost(evt);
            }
        });

        RegCancel.setText("Cancel");
        RegCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RegCancelActionPerformed(evt);
            }
        });

        RegConfirm.setText("Register");
        RegConfirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RegConfirmActionPerformed(evt);
            }
        });

        RegFNameValid.setFont(new java.awt.Font("Dialog", 1, 10)); // NOI18N
        RegFNameValid.setForeground(new java.awt.Color(153, 0, 0));

        RegLNameValid.setFont(new java.awt.Font("Dialog", 1, 10)); // NOI18N
        RegLNameValid.setForeground(new java.awt.Color(153, 0, 0));

        RegHandleValid.setFont(new java.awt.Font("Dialog", 1, 10)); // NOI18N
        RegHandleValid.setForeground(new java.awt.Color(153, 0, 0));

        RegEmailValid.setFont(new java.awt.Font("Dialog", 1, 10)); // NOI18N
        RegEmailValid.setForeground(new java.awt.Color(153, 0, 0));

        RegPassValid.setFont(new java.awt.Font("Dialog", 1, 10)); // NOI18N
        RegPassValid.setForeground(new java.awt.Color(153, 0, 0));

        RegPassMatch.setFont(new java.awt.Font("Dialog", 1, 10)); // NOI18N
        RegPassMatch.setForeground(new java.awt.Color(153, 0, 0));

        javax.swing.GroupLayout RegPanelLayout = new javax.swing.GroupLayout(RegPanel);
        RegPanel.setLayout(RegPanelLayout);
        RegPanelLayout.setHorizontalGroup(
            RegPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(RegPanelLayout.createSequentialGroup()
                .addGap(219, 219, 219)
                .addGroup(RegPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(RegPanelLayout.createSequentialGroup()
                        .addComponent(RegPassLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(RegPassField2))
                    .addComponent(RegTitleLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, RegPanelLayout.createSequentialGroup()
                        .addComponent(RegCancel, javax.swing.GroupLayout.DEFAULT_SIZE, 148, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(RegConfirm, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(RegPanelLayout.createSequentialGroup()
                        .addGroup(RegPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(RegFnameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(RegLNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(RegHandleLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(RegEmailLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(RegPassLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 86, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(RegPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(RegEmailField)
                            .addComponent(RegPassField)
                            .addComponent(RegHandleField)
                            .addComponent(RegLNameField)
                            .addComponent(RegFNameField))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(RegPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(RegLNameValid, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(RegPassMatch, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(RegPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(RegPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(RegPassValid, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(RegEmailValid, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(RegHandleValid, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(RegFNameValid, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        RegPanelLayout.setVerticalGroup(
            RegPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(RegPanelLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(RegTitleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(130, 130, 130)
                .addGroup(RegPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(RegFNameValid, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                    .addGroup(RegPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(RegFNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(RegFnameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addGroup(RegPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(RegLNameValid, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                    .addGroup(RegPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(RegLNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(RegLNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addGroup(RegPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(RegHandleValid, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                    .addGroup(RegPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(RegHandleField, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(RegHandleLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addGroup(RegPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(RegEmailValid, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                    .addGroup(RegPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(RegEmailField, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(RegEmailLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(18, 19, Short.MAX_VALUE)
                .addGroup(RegPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(RegPassValid, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(RegPassLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(RegPassField, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(RegPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(RegPassLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(RegPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(RegPassMatch, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                        .addComponent(RegPassField2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(RegPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(RegConfirm, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(RegCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(47, 47, 47))
        );

        MainPanel.add(RegPanel, "RegPanel");

        getContentPane().add(MainPanel, java.awt.BorderLayout.CENTER);

        NavPanel.setMaximumSize(new java.awt.Dimension(800, 25));
        NavPanel.setMinimumSize(new java.awt.Dimension(800, 25));
        NavPanel.setPreferredSize(new java.awt.Dimension(800, 25));

        NavHome.setText("Home");
        NavHome.setEnabled(false);
        NavHome.setMaximumSize(new java.awt.Dimension(175, 25));
        NavHome.setMinimumSize(new java.awt.Dimension(175, 25));
        NavHome.setPreferredSize(new java.awt.Dimension(175, 25));
        NavHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NavHomeActionPerformed(evt);
            }
        });

        NavRegLog.setText("Register");
        NavRegLog.setMaximumSize(new java.awt.Dimension(175, 25));
        NavRegLog.setMinimumSize(new java.awt.Dimension(175, 25));
        NavRegLog.setPreferredSize(new java.awt.Dimension(175, 25));
        NavRegLog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NavRegLogActionPerformed(evt);
            }
        });

        NavHiScores.setText("Hi Scores");
        NavHiScores.setMaximumSize(new java.awt.Dimension(175, 25));
        NavHiScores.setMinimumSize(new java.awt.Dimension(175, 25));
        NavHiScores.setPreferredSize(new java.awt.Dimension(175, 25));
        NavHiScores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NavHiScoresActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout NavPanelLayout = new javax.swing.GroupLayout(NavPanel);
        NavPanel.setLayout(NavPanelLayout);
        NavPanelLayout.setHorizontalGroup(
            NavPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(NavPanelLayout.createSequentialGroup()
                .addComponent(NavHome, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(NavHiScores, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 269, Short.MAX_VALUE)
                .addComponent(NavRegLog, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        NavPanelLayout.setVerticalGroup(
            NavPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(NavPanelLayout.createSequentialGroup()
                .addGroup(NavPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(NavRegLog, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(NavPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(NavHome, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(NavHiScores, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        getContentPane().add(NavPanel, java.awt.BorderLayout.PAGE_START);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void NavHomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NavHomeActionPerformed

        if (User.isLoggedIn()) {
            clearFields(HomePanel);
            cl.show(MainPanel, "HomePanel");
            NavRegLog.setEnabled(true);
            NavHome.setEnabled(false);
            NavHiScores.setEnabled(true);

        } else {
            cl.show(MainPanel, "LoginPanel");
            clearFields(LoginPanel);
            NavRegLog.setEnabled(true);
            NavHome.setEnabled(false);
            NavHiScores.setEnabled(true);

        }
    }//GEN-LAST:event_NavHomeActionPerformed

    private void NavHiScoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NavHiScoresActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NavHiScoresActionPerformed

    private void NavRegLogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NavRegLogActionPerformed

        if (User.isLoggedIn()) {
            User.logout();
            clearFields(LoginPanel);
            cl.show(MainPanel, "LoginPanel");
            NavRegLog.setEnabled(true);
            NavRegLog.setText("Register");
            NavHome.setEnabled(false);
            NavHiScores.setEnabled(true);

        } else {
            clearFields(RegPanel);
            NavRegLog.setEnabled(false);
            NavHome.setEnabled(true);
            NavHiScores.setEnabled(true);
            cl.show(MainPanel, "RegPanel");

        }
    }//GEN-LAST:event_NavRegLogActionPerformed

    private void RegCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RegCancelActionPerformed
        clearFields(LoginPanel);
        cl.show(MainPanel, "LoginPanel");
        NavHome.setEnabled(false);
        NavRegLog.setEnabled(true);

    }//GEN-LAST:event_RegCancelActionPerformed

    private void RegFNameFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_RegFNameFieldFocusLost
        if (RegFNameField.getText().length() > 0) {
            if (matchName(RegFNameField.getText())) {
                RegFNameField.setBackground(valid);
                RegFNameValid.setText("");
            } else {
                RegFNameField.setBackground(invalid);
                RegFNameValid.setText("<html>Valid Name must be 1-20 Alphabetic characters</html>");
            }
        } else {
            RegFNameField.setBackground(invalid);
            RegFNameValid.setText("<html>First Name Required</html>");
        }
    }//GEN-LAST:event_RegFNameFieldFocusLost

    private void RegLNameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RegLNameFieldActionPerformed

    }//GEN-LAST:event_RegLNameFieldActionPerformed

    private void RegHandleFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_RegHandleFieldFocusLost
        if (RegHandleField.getText().length() > 0) {
            if (matchHandle(RegHandleField.getText())) {
                RegHandleField.setBackground(valid);
                RegHandleValid.setText("");
            } else {
                RegHandleField.setBackground(invalid);
                RegHandleValid.setText("<html>Handle must be 3-20 characters long </br> AlphaNumeric or @ # $ %</html>");
            }
        } else {
            RegHandleField.setBackground(invalid);
            RegHandleValid.setText("<html>Handle Required</html>");
        }
    }//GEN-LAST:event_RegHandleFieldFocusLost

    private void RegEmailFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_RegEmailFieldFocusLost
        if (RegEmailField.getText().length() > 0) {
            if (matchEmail(RegEmailField.getText())) {
                RegEmailField.setBackground(valid);
                RegEmailValid.setText("");
            } else {
                RegEmailField.setBackground(invalid);
                RegEmailValid.setText("<html>Invalid email (name@site.domain)</html>");
            }
            if (DBConnect.checkEmail(RegEmailField.getText().trim()) > 0) {
                RegEmailField.setBackground(invalid);
                RegEmailValid.setText("<html>Email already registered</html>");
            }
        } else {
            RegEmailField.setBackground(invalid);
            RegEmailValid.setText("<html>Email Required</html>");
        }
    }//GEN-LAST:event_RegEmailFieldFocusLost

    private void RegPassFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_RegPassFieldFocusLost
        if (RegPassField.getText().length() > 0) {
            if (matchPassword(RegPassField.getText())) {
                RegPassField.setBackground(valid);
                RegPassValid.setText("");
            } else {
                RegPassField.setBackground(invalid);
                RegPassValid.setText("<html>Password must be 6-20 characters long </br> AlphaNumeric or @ # $ %</html>");
            }
        } else {
            RegPassField.setBackground(invalid);
            RegPassValid.setText("<html>Password Required</html>");
        }
    }//GEN-LAST:event_RegPassFieldFocusLost

    private void RegPassField2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_RegPassField2FocusLost
        if (RegPassField.getText().length() > 0 && RegPassField2.getText().length() > 0) {
            if (matchPassword(RegPassField.getText())) {
                if (RegPassField.getText().equals(RegPassField2.getText())) {
                    RegPassField.setBackground(valid);
                    RegPassField2.setBackground(valid);
                    RegPassMatch.setText("");
                } else {
                    RegPassField2.setBackground(invalid);
                    RegPassMatch.setText("Passwords must match");
                }
            } else {
                if (RegPassField.getText().equals(RegPassField2.getText())) {
                    RegPassField2.setBackground(valid);
                    RegPassMatch.setText("");
                } else {
                    RegPassField2.setBackground(invalid);
                    RegPassMatch.setText("Passwords must match");
                }
            }
        }
    }//GEN-LAST:event_RegPassField2FocusLost

    private void RegLNameFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_RegLNameFieldFocusLost
        if (RegLNameField.getText().length() > 0) {
            if (matchName(RegLNameField.getText())) {
                RegLNameField.setBackground(valid);
                RegLNameValid.setText("");
            } else {
                RegLNameField.setBackground(invalid);
                RegLNameValid.setText("<html>Valid Name must be 1-20 Alphabetic characters</html>");
            }
        } else {
            RegLNameField.setBackground(invalid);
            RegLNameValid.setText("<html>Last Name Required</html>");
        }
    }//GEN-LAST:event_RegLNameFieldFocusLost

    private void RegConfirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RegConfirmActionPerformed
        register();
    }//GEN-LAST:event_RegConfirmActionPerformed

    private void LoginConfirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LoginConfirmActionPerformed
        login();
    }//GEN-LAST:event_LoginConfirmActionPerformed

    private void LoginCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LoginCancelActionPerformed
        close();
    }//GEN-LAST:event_LoginCancelActionPerformed

    private void login() {
        int errors = 0;

        //email check
        if (LoginEmailField.getText().length() > 0) {
            LoginEmailValid.setText("");
        } else {
            errors++;
            LoginEmailValid.setText("<html>Email Required</html>");
        }

        if (LoginPassField.getText().length() > 0) {
            LoginPassValid.setText("");
        } else {
            errors++;
            LoginPassValid.setText("Password Required");
        }
        if (errors == 0) {
            boolean valid = DBConnect.login(LoginEmailField.getText(), LoginPassField.getText());
            if (valid) {
                HomeWelcomeLabel.setText("Welcome " + User.getUserHandle() + "!");
                cl.show(MainPanel, "HomePanel");
                clearFields(LoginPanel);
                NavRegLog.setText("Logout");
                NavRegLog.setEnabled(true);
                NavHome.setEnabled(false);
                NavHiScores.setEnabled(true);
            } else {
                JOptionPane.showMessageDialog(MainPanel, "<html><h1>Error</h1><p>Email and/or password not found.</p></html>", "Login Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }

    //register form confirmation
    private void register() {
        int errors = 0;//error counter

        //FirstName validator
        if (RegFNameField.getText().length() > 0) {
            if (matchName(RegFNameField.getText())) {
                RegFNameField.setBackground(valid);
                RegFNameValid.setText("");
            } else {
                errors++;
                RegFNameField.setBackground(invalid);
                RegFNameValid.setText("<html>Valid Name must be 1-20 Alphabetic characters</html>");
            }
        } else {
            errors++;
            RegFNameField.setBackground(invalid);
            RegFNameValid.setText("<html>First Name Required</html>");
        }

        //LastName Validator
        if (RegLNameField.getText().length() > 0) {
            if (matchName(RegLNameField.getText())) {
                RegLNameField.setBackground(valid);
                RegLNameValid.setText("");
            } else {
                errors++;
                RegLNameField.setBackground(invalid);
                RegLNameValid.setText("<html>Valid Name must be 1-20 Alphabetic characters</html>");
            }
        } else {
            errors++;
            RegLNameField.setBackground(invalid);
            RegLNameValid.setText("<html>Last Name Required</html>");
        }

        //handle validator
        if (RegHandleField.getText().length() > 0) {
            if (matchName(RegLNameField.getText())) {
                RegHandleField.setBackground(valid);
                RegHandleValid.setText("");
            } else {
                errors++;
                RegHandleField.setBackground(invalid);
                RegHandleValid.setText("<html>Handle must be 3-20 characters long </br> AlphaNumeric or @ # $ %</html>");
            }
        } else {
            errors++;
            RegHandleField.setBackground(invalid);
            RegHandleValid.setText("<html>Handle Required</html>");
        }

        //email validator
        if (RegEmailField.getText().length() > 0) {
            if (matchEmail(RegEmailField.getText())) {
                RegEmailField.setBackground(valid);
                RegEmailValid.setText("");
            } else {
                errors++;
                RegEmailField.setBackground(invalid);
                RegEmailValid.setText("<html>Invalid email (name@site.domain)</html>");
            }
            if (DBConnect.checkEmail(RegEmailField.getText().trim()) > 0) {
                errors++;
                RegEmailField.setBackground(invalid);
                RegEmailValid.setText("<html>Email already registered</html>");
            }
        } else {
            errors++;
            RegEmailField.setBackground(invalid);
            RegEmailValid.setText("<html>Email Required</html>");
        }

        //pass field 1
        if (RegPassField.getText().length() > 0) {
            if (matchPassword(RegPassField.getText())) {
                RegPassField.setBackground(valid);
                RegPassValid.setText("");
            } else {
                RegPassField.setBackground(invalid);
                RegPassValid.setText("<html>Password must be 6-20 characters long </br> AlphaNumeric or @ # $ %</html>");
            }
        } else {
            RegPassField.setBackground(invalid);
            RegPassValid.setText("<html>Password Required</html>");
        }

        //pass field 2 confirmation
        if (RegPassField.getText().length() > 0 && RegPassField2.getText().length() > 0) {
            if (matchPassword(RegPassField.getText())) {
                if (RegPassField.getText().equals(RegPassField2.getText())) {
                    RegPassField.setBackground(valid);
                    RegPassField2.setBackground(valid);
                    RegPassMatch.setText("");
                } else {
                    RegPassField2.setBackground(invalid);
                    RegPassMatch.setText("Passwords must match");
                }
            } else {
                if (RegPassField.getText().equals(RegPassField2.getText())) {
                    RegPassField2.setBackground(valid);
                    RegPassMatch.setText("");
                } else {
                    RegPassField2.setBackground(invalid);
                    RegPassMatch.setText("Passwords must match");
                }
            }
        }

        //continue registration if no errors
        if (errors == 0) {
            int register = DBConnect.register(
                    RegFNameField.getText(),
                    RegLNameField.getText(),
                    RegHandleField.getText(),
                    RegEmailField.getText(),
                    RegPassField.getText());
            if (register == 1) {
                JOptionPane.showMessageDialog(MainPanel, "<html><h1>Thank You!</h1><p> You are now registered.</p></html>", "Registration Success", JOptionPane.INFORMATION_MESSAGE);
                clearFields(LoginPanel);
                LoginEmailField.setText(RegEmailField.getText());
                clearFields(RegPanel);
                cl.show(MainPanel, "LoginPanel");
            } else {
                JOptionPane.showMessageDialog(MainPanel, "<html><h1>Error</h1><p>You could not be registered due to a system error.</br> We apologize for any inconvenience.</p></html>", "Regisration Error", JOptionPane.ERROR_MESSAGE);
            }

        }

    }

    //clear text and password fields
    private void clearFields(JPanel panel) {
        Component components[] = panel.getComponents();
        for (Component comp : components) {
            if (comp instanceof JTextField) {//clear text fields
                JTextField field = (JTextField) comp;
                field.setText("");
                field.setBackground(Color.white);
            } else if (comp instanceof JPasswordField) {//clear password fields
                JPasswordField pfield = (JPasswordField) comp;
                pfield.setText("");
                pfield.setBackground(Color.white);
            } else if (comp instanceof JLabel) {//clear error labels (with fdark red foreground color)
                JLabel lfield = (JLabel) comp;
                if (lfield.getForeground().equals(new Color(153, 0, 0))) {
                    lfield.setText("");
                }
            }

        }
    }

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new UserControlPanel().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel HomePanel;
    private javax.swing.JLabel HomeWelcomeLabel;
    private javax.swing.JButton LoginCancel;
    private javax.swing.JButton LoginConfirm;
    private javax.swing.JTextField LoginEmailField;
    private javax.swing.JLabel LoginEmailLabel;
    private javax.swing.JLabel LoginEmailValid;
    private javax.swing.JPanel LoginPanel;
    private javax.swing.JPasswordField LoginPassField;
    private javax.swing.JLabel LoginPassLabel;
    private javax.swing.JLabel LoginPassValid;
    private javax.swing.JLabel LoginTitlelabel;
    private javax.swing.JPanel MainPanel;
    private javax.swing.JButton NavHiScores;
    private javax.swing.JButton NavHome;
    private javax.swing.JPanel NavPanel;
    private javax.swing.JButton NavRegLog;
    private javax.swing.JButton RegCancel;
    private javax.swing.JButton RegConfirm;
    private javax.swing.JTextField RegEmailField;
    private javax.swing.JLabel RegEmailLabel;
    private javax.swing.JLabel RegEmailValid;
    private javax.swing.JTextField RegFNameField;
    private javax.swing.JLabel RegFNameValid;
    private javax.swing.JLabel RegFnameLabel;
    private javax.swing.JTextField RegHandleField;
    private javax.swing.JLabel RegHandleLabel;
    private javax.swing.JLabel RegHandleValid;
    private javax.swing.JTextField RegLNameField;
    private javax.swing.JLabel RegLNameLabel;
    private javax.swing.JLabel RegLNameValid;
    private javax.swing.JPanel RegPanel;
    private javax.swing.JPasswordField RegPassField;
    private javax.swing.JPasswordField RegPassField2;
    private javax.swing.JLabel RegPassLabel;
    private javax.swing.JLabel RegPassLabel2;
    private javax.swing.JLabel RegPassMatch;
    private javax.swing.JLabel RegPassValid;
    private javax.swing.JLabel RegTitleLabel;
    // End of variables declaration//GEN-END:variables

}
